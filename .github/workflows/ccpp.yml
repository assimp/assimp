name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.cxx }}-build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-gcc, macos-clang, windows-msvc, ubuntu-clang]
        # For Windows msvc, for Linux and macOS let's use the clang compiler, use gcc for Linux.
        include:
          - name: windows-msvc
            os: windows-latest
            cxx: cl.exe
            cc: cl.exe
          - name: ubuntu-clang
            os: ubuntu-latest
            cxx: clang++
            cc: clang
          - name: macos-clang
            os: macos-latest
            cxx: clang++
            cc: clang
          - name: ubuntu-gcc
            os: ubuntu-latest
            cxx: g++
            cc: gcc

    steps:
    - uses: actions/checkout@v2
    
    - uses: lukka/get-cmake@latest
    
    - uses: ilammy/msvc-dev-cmd@v1
    
    - uses: lukka/set-shell-env@v1
      with:
        CXX: ${{ matrix.cxx }}
        CC: ${{ matrix.cc }}
    
    - name: configure and build
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        cmakeAppendedArgs: '-GNinja -DCMAKE_BUILD_TYPE=Release'
        buildWithCMakeArgs: '-- -v'
        buildDirectory: '${{ github.workspace }}/build/'
        
    - name: test
      run: cd build/bin && ./unit
      shell: bash
