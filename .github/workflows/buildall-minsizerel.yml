name: buildall-minsizerel

on: [push]

jobs:  
 androidarm64:
   runs-on: ubuntu-latest    
   steps:
    - uses: actions/checkout@v2
    - uses: lukka/run-cmake@v0
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: false
        buildDirectory: '${{ runner.workspace }}/build/androidarm64'
        cmakeAppendedArgs: '-G "Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE="/usr/local/lib/android/sdk/ndk-bundle/build/cmake/android.toolchain.cmake" -DANDROID_TOOLCHAIN=clang -DANDROID_TOOLCHAIN_NAME=aarch64-linux-android-4.9 -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
        buildWithCMakeArgs: '--config MinSizeRel'
    - uses: actions/upload-artifact@v1
      with:
        name: assimp-androidarm64
        path: '${{ runner.workspace }}/build/androidarm64/bin/libassimp.so'
#------------------------------------------------------------------------------------------------------------------
 androidarmv7:
   runs-on: ubuntu-latest    
   steps:
    - uses: actions/checkout@v2
    - uses: lukka/run-cmake@v0
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: false
        buildDirectory: '${{ runner.workspace }}/build/androidarmv7'
        cmakeAppendedArgs: '-G "Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE="/usr/local/lib/android/sdk/ndk-bundle/build/cmake/android.toolchain.cmake" -DANDROID_TOOLCHAIN=clang -DANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
        buildWithCMakeArgs: '--config MinSizeRel'
    - uses: actions/upload-artifact@v1
      with:
        name: assimp-androidarmv7
        path: '${{ runner.workspace }}/build/androidarmv7/bin/libassimp.so'
#------------------------------------------------------------------------------------------------------------------
 androidx86:
  runs-on: ubuntu-latest    
  steps:
   - uses: actions/checkout@v2
   - uses: lukka/run-cmake@v0
     with:
       cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
       cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
       useVcpkgToolchainFile: false
       buildDirectory: '${{ runner.workspace }}/build/androidx86'
       cmakeAppendedArgs: '-G "Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE="/usr/local/lib/android/sdk/ndk-bundle/build/cmake/android.toolchain.cmake" -DANDROID_TOOLCHAIN=clang -DANDROID_TOOLCHAIN_NAME=x86-4.9 -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
       buildWithCMakeArgs: '--config MinSizeRel'
   - uses: actions/upload-artifact@v1
     with:
       name: assimp-androidx86
       path: '${{ runner.workspace }}/build/androidx86/bin/libassimp.so'
#------------------------------------------------------------------------------------------------------------------
 iosdevice:
   runs-on: macos-latest
   steps:
     - uses: actions/checkout@v2
     - name: 'build'
       run: ./port/iOS/build-lightweight.sh iphone
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-iosdevice
         path: '${{ runner.workspace }}/assimp/lib/libassimprelease.a'
     - uses: actions/upload-artifact@v1
       with:
         name: irrxml-iosdevice
         path: '${{ runner.workspace }}/assimp/lib/libirrxmlrelease.a'
#------------------------------------------------------------------------------------------------------------------
 iossimulator:
   runs-on: macos-latest
   steps:
     - uses: actions/checkout@v2
     - name: 'build'
       run: ./port/iOS/build-lightweight.sh simulator
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-iossimulator
         path: '${{ runner.workspace }}/assimp/lib/libassimpdebug.a'
     - uses: actions/upload-artifact@v1
       with:
         name: irrxml-iossimulator
         path: '${{ runner.workspace }}/assimp/lib/libirrxmldebug.a'
#------------------------------------------------------------------------------------------------------------------
 linux64:
   runs-on: ubuntu-latest    
   steps:
     - uses: actions/checkout@v2
     - uses: lukka/run-cmake@v0
       with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
         useVcpkgToolchainFile: false
         buildDirectory: '${{ runner.workspace }}/build/linux64'
         cmakeAppendedArgs: '-G "Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
         buildWithCMakeArgs: '--config MinSizeRel' 
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-linux64
         path: '${{ runner.workspace }}/build/linux64/bin/libassimp.so'
#------------------------------------------------------------------------------------------------------------------
 osxuniversal:
   runs-on: macos-latest
   steps:
     - uses: actions/checkout@v2
     - uses: lukka/run-cmake@v0
       with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
         useVcpkgToolchainFile: false
         buildDirectory: '${{ runner.workspace }}/build/osx'
         cmakeAppendedArgs: '-G "Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
         buildWithCMakeArgs: '--config MinSizeRel' 
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-osxuniversal
         path: '${{ runner.workspace }}/build/osx/bin/libassimp.dylib'
#------------------------------------------------------------------------------------------------------------------
 uwp32:
   runs-on: windows-latest    
   steps:
     - uses: actions/checkout@v2
     - uses: lukka/run-cmake@v0
       with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
         useVcpkgToolchainFile: false
         buildDirectory: '${{ runner.workspace }}/build/uwp32'
         cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A Win32 -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE="port\uwp\uwp-toolchain.cmake" -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
         buildWithCMakeArgs: '--config MinSizeRel' 
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-uwp32
         path: '${{ runner.workspace }}\build\uwp32\bin\MinSizeRel\assimp.dll'
     - uses: actions/upload-artifact@v1
       with:
         name: zlib-uwp32
         path: '${{ runner.workspace }}\build\uwp32\bin\MinSizeRel\zlib.dll'  
#------------------------------------------------------------------------------------------------------------------
 uwp64:
   runs-on: windows-latest    
   steps:
     - uses: actions/checkout@v2
     - uses: lukka/run-cmake@v0
       with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
         useVcpkgToolchainFile: false
         buildDirectory: '${{ runner.workspace }}/build/uwp64'
         cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A x64 -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE="port\uwp\uwp-toolchain.cmake" -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
         buildWithCMakeArgs: '--config MinSizeRel' 
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-uwp64
         path: '${{ runner.workspace }}\build\uwp64\bin\MinSizeRel\assimp.dll'
     - uses: actions/upload-artifact@v1
       with:
         name: zlib-uwp64
         path: '${{ runner.workspace }}\build\uwp64\bin\MinSizeRel\zlib.dll'  
#------------------------------------------------------------------------------------------------------------------
 uwparm64:
   runs-on: windows-latest    
   steps:
     - uses: actions/checkout@v2
     - uses: lukka/run-cmake@v0
       with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
         useVcpkgToolchainFile: false
         buildDirectory: '${{ runner.workspace }}/build/uwparm64'
         cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A arm64 -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE="port\uwp\uwp-toolchain.cmake" -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
         buildWithCMakeArgs: '--config MinSizeRel' 
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-uwparm64
         path: '${{ runner.workspace }}\build\uwparm64\bin\MinSizeRel\assimp.dll'
     - uses: actions/upload-artifact@v1
       with:
         name: zlib-uwparm64
         path: '${{ runner.workspace }}\build\uwparm64\bin\MinSizeRel\zlib.dll'
#------------------------------------------------------------------------------------------------------------------
 win32:
   runs-on: windows-latest    
   steps:
     - uses: actions/checkout@v2
     - uses: lukka/run-cmake@v0
       with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
         useVcpkgToolchainFile: false
         buildDirectory: '${{ runner.workspace }}/build/win32'
         cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A Win32 -DCMAKE_BUILD_TYPE=MinSizeRel -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
         buildWithCMakeArgs: '--config MinSizeRel' 
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-win32
         path: '${{ runner.workspace }}\build\win32\bin\MinSizeRel\assimp.dll'
     - uses: actions/upload-artifact@v1
       with:
         name: zlib-win32
         path: '${{ runner.workspace }}\build\win32\bin\MinSizeRel\zlib.dll'   
#------------------------------------------------------------------------------------------------------------------
 win64:
   runs-on: windows-latest    
   steps:
     - uses: actions/checkout@v2
     - uses: lukka/run-cmake@v0
       with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
         useVcpkgToolchainFile: false
         buildDirectory: '${{ runner.workspace }}/build/win64'
         cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A x64 -DCMAKE_BUILD_TYPE=MinSizeRel -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DASSIMP_NO_EXPORT=ON -DBUILD_SHARED_LIBS=ON -DUSE_AES=OFF -DZIP_64=ON -DSKIP_INSTALL_ALL=ON -DASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT=ON -DSKIP_MSVC_UPDATE=ON -DCMAKE_CONFIGURATION_TYPES="MinSizeRel"'
         buildWithCMakeArgs: '--config MinSizeRel' 
     - uses: actions/upload-artifact@v1
       with:
         name: assimp-win64
         path: '${{ runner.workspace }}\build\win64\bin\MinSizeRel\assimp.dll'
     - uses: actions/upload-artifact@v1
       with:
         name: zlib-win64
         path: '${{ runner.workspace }}\build\win64\bin\MinSizeRel\zlib.dll'   
#------------------------------------------------------------------------------------------------------------------
 pack-libraries:
    runs-on: windows-latest
    needs: [androidarm64, androidarmv7, androidx86, iosdevice, iossimulator, linux64, osxuniversal, uwp32, uwp64, uwparm64, win32, win64]
#------------------------------------------------------------------------------------------------------------------
    steps:
     - uses: actions/download-artifact@v1
       with:
        name: zlib-win64
        path: TriLib/Assets/TriLib/TriLib/Plugins/Windows/x86_64
     - uses: actions/download-artifact@v1
       with:
        name: assimp-win64
        path: TriLib/Assets/TriLib/TriLib/Plugins/Windows/x86_64
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: zlib-win32
        path: TriLib/Assets/TriLib/TriLib/Plugins/Windows/x86
     - uses: actions/download-artifact@v1
       with:
        name: assimp-win32
        path: TriLib/Assets/TriLib/TriLib/Plugins/Windows/x86
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: zlib-uwp32
        path: TriLib/Assets/TriLib/TriLib/Plugins/UWP/x86
     - uses: actions/download-artifact@v1
       with:
        name: assimp-uwp32
        path: TriLib/Assets/TriLib/TriLib/Plugins/UWP/x86
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: zlib-uwp64
        path: TriLib/Assets/TriLib/TriLib/Plugins/UWP/x86_64
     - uses: actions/download-artifact@v1
       with:
        name: assimp-uwp64
        path: TriLib/Assets/TriLib/TriLib/Plugins/UWP/x86_64
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: zlib-uwparm64
        path: TriLib/Assets/TriLib/TriLib/Plugins/UWP/arm64
     - uses: actions/download-artifact@v1
       with:
        name: assimp-uwparm64
        path: TriLib/Assets/TriLib/TriLib/Plugins/UWP/arm64
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: assimp-osxuniversal
        path: TriLib/Assets/TriLib/TriLib/Plugins/OSX
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: assimp-linux64
        path: TriLib/Assets/TriLib/TriLib/Plugins/Linux
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: assimp-iossimulator
        path: TriLib/Assets/TriLib/TriLib/Plugins/iOS
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: assimp-iosdevice
        path: TriLib/Assets/TriLib/TriLib/Plugins/iOS
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: assimp-androidx86
        path: TriLib/Assets/TriLib/TriLib/Plugins/Android/x86
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: assimp-androidarmv7
        path: TriLib/Assets/TriLib/TriLib/Plugins/Android/armeabi-v7a
#------------------------------------------------------------------------------------------------------------------
     - uses: actions/download-artifact@v1
       with:
        name: assimp-androidarm64
        path: TriLib/Assets/TriLib/TriLib/Plugins/Android/arm64
#------------------------------------------------------------------------------------------------------------------
     - name: create-dir
       run: md "${{ github.workspace }}\TriLibPlugins"
     - name: zipfiles
       run: compress-archive -path "${{ github.workspace }}\TriLib" -destinationpath "${{ github.workspace }}\TriLibPlugins\TriLibPlugins.zip" -compressionlevel optimal
     - uses: actions/upload-artifact@master
       with:
        name: TriLibPlugins
        path: ${{ github.workspace }}\TriLibPlugins
