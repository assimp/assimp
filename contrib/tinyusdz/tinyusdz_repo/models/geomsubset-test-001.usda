#usda 1.0
(
    doc = "Blender v3.2.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Camera"
{
    matrix4d xformOp:transform = ( (0.6859206557273865, 0.7276763319969177, 0, 0), (-0.32401347160339355, 0.305420845746994, 0.8953956365585327, 0), (0.6515582203865051, -0.6141703724861145, 0.44527140259742737, 0), (7.358891487121582, -6.925790786743164, 4.958309173583984, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Camera "Camera"
    {
        float2 clippingRange = (0.1, 100)
        float focalLength = 50
        float horizontalAperture = 36
        float horizontalApertureOffset = 0
        token projection = "perspective"
        float verticalAperture = 20.25
        float verticalApertureOffset = 0
    }
}

def Xform "Light"
{
    matrix4d xformOp:transform = ( (-0.29086464643478394, 0.9551711678504944, -0.05518905818462372, 0), (-0.7711008191108704, -0.1998833566904068, 0.6045247316360474, 0), (0.5663931965827942, 0.21839119493961334, 0.7946722507476807, 0), (4.076245307922363, 1.0054539442062378, 5.903861999511719, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def SphereLight "Light"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:intensity = 10
        float inputs:radius = 0.1
        float inputs:specular = 1
    }
}

def Xform "Grid"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "Grid_002"
    {
        uniform bool doubleSided = 1
        int[] faceVertexCounts = [4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 4, 3, 1, 2, 5, 4, 3, 4, 7, 6, 4, 5, 8, 7]
        #rel material:binding = </_materials/Material_001>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-1, -1, 0), (0, -1, 0), (1, -1, 0), (-1, 0, 0), (0, 0, 0), (1, 0, 0), (-1, 1, 0), (0, 1, 0), (1, 1, 0)]
        texCoord2f[] primvars:UVMap = [(0, 0), (0.5, 0), (0.5, 0.5), (0, 0.5), (0.5, 0), (1, 0), (1, 0.5), (0.5, 0.5), (0, 0.5), (0.5, 0.5), (0.5, 1), (0, 1), (0.5, 0.5), (1, 0.5), (1, 1), (0.5, 1)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"

	uniform token subsetFamily:materialBind:familyType = "partition"

        def GeomSubset "subset01"
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [0, 1, 2]
            rel material:binding = </_materials/Material_001>
        }
    }
}

def "_materials"
{
    def Material "Material_001"
    {
        token outputs:surface.connect = </_materials/Material_001/preview/Principled_BSDF.outputs:surface>

        def Scope "preview"
        {
            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                float3 inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.45
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }
    }
}

